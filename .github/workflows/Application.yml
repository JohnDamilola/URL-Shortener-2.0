# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "17-fix-backend-tests" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_DB: postgres_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      ANSIBLE_HOST_KEY_CHECKING: False
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Cache
      uses: actions/cache@v1
      id: cache
      with: 
        path: ./env
        key: ${{ runner.os }}-env-v2-${{ hashFiles('**/requirements.txt') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python3 -m venv env
        source env/bin/activate
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 pytest
        python3 -m pip install -r backend/test/requirements.txt
        python3 -m pip install postgres
    - name: Create Database
      run: |
        source env/bin/activate
        sudo PGPASSWORD="postgres_password" psql -U postgres_user -d pg_ldap --no-password -h postgres -p 5432 -t -c 'CREATE DATABASE "url_shortener";'
        #psql -h localhost -U postgres_user -w --no-password -c 'CREATE DATABASE "url_shortener";'
        #sudo service postgresql initdb
        #sudo service postgresql start
        #psql
        #create database url_shortener;
        #\q
    - name: Lint with flake8
      run: |
        source env/bin/activate
        # stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Tests
      run: |
        source env/bin/activate
        python3 backend/test/test_auth.py
